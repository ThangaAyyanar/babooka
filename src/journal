#!/usr/bin/env bb

(require '[babashka.cli :as cli])
(require '[babashka.fs :as fs])
(require '[clojure.edn :as edn])

(def ENTRIES-LOCATION "entries.edn")

(defn read-entries
  []
  (if (fs/exists? ENTRIES-LOCATION)
    (edn/read-string (slurp ENTRIES-LOCATION))
    []))

(defn add-entry
  [{:keys [opts]}]
  (let [entries (read-entries)]
    (spit ENTRIES-LOCATION
          (conj entries
                (merge {:timestamp (System/currentTimeMillis)} ;; default timestamp
                       opts)))))

(def cli-opts
  {:alias   {:e :entry
             :t :timestamp}
   :coerce  {:timestamp :long}
   :require [:entry]})

(def table
  [{:cmds ["add"] :fn add-entry}])

(cli/dispatch table
              *command-line-args*
              cli-opts)

(comment
  (add-entry (first *command-line-args*))

  ;; clojure.tools.cli format
  (def cli-opts
    [["-e" "--entry ENTRY" "Text of your entry"]
     ["-t" "--timestamp"
      :parse-fn #(Integer/parseInt %)
      :validate [nat-int? "Must be 0 or greater"]]]))
